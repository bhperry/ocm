package conditions

import (
	"slices"
	"strings"

	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

const (
	// conditionRuleReasonPrefix is used to identify conditions that were generated by condition rules
	conditionRuleReasonPrefix = "ConditionRule"
)

// IsConditionGeneratedByConditionRule determines if a condition was created by condition rules
func IsConditionGeneratedByConditionRule(condition metav1.Condition) bool {
	return strings.HasPrefix(condition.Reason, conditionRuleReasonPrefix)
}

// PruneConditionsGeneratedByConditionRules removes old conditions that were generated by a ConditionRule
// but have not been updated since that latest ManifestWork generation. Removing a ConditionRule will
// always update the ManifestWork generation, so any conditions generated by conditions rules from a
// previous generation must have been from a deleted rule.
func PruneConditionsGeneratedByConditionRules(conditions *[]metav1.Condition, workGeneration int64) {
	*conditions = slices.DeleteFunc(*conditions, func(c metav1.Condition) bool {
		return IsConditionGeneratedByConditionRule(c) && c.ObservedGeneration != workGeneration
	})
}
